{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MVP Documentation This is the documentation for Mapping Vascular and Perivascular spaces (MVP) toolset, which is written to help with automated mapping of vascular and perivascular features of the brain from neuroimaging data. The toolset consists of tools to map: Perivascular Spaces ( PVS ) White Matter Hyperintensities (WMH) Cerebral vessels ... the document is under construction","title":"MVP Documentation"},{"location":"#mvp-documentation","text":"This is the documentation for Mapping Vascular and Perivascular spaces (MVP) toolset, which is written to help with automated mapping of vascular and perivascular features of the brain from neuroimaging data. The toolset consists of tools to map: Perivascular Spaces ( PVS ) White Matter Hyperintensities (WMH) Cerebral vessels ... the document is under construction","title":"MVP Documentation"},{"location":"_installation/","text":"Installation 1. Install Dependencies MVP requires FSL 5 or higher , FreeSurfer, 5.3 or higher and QIT . To check the version of above softwares on your computer, try below lines: which fsl which qit which freeview 2. Install MVP Download MVP repository and add it to your system path. The direct link is provide below. To download the MVP manually clone the repository from the MVP GitHub. git clone https://github.com/sepehrband/MVP.git sh setpath.sh or manually modify the source (e.g. ~/.bashrc ). MVPDIR=/Users/sepehrband/softwares/MVP PATH=${MVPDIR}/bin/:${PATH} export MVPDIR PATH 3. Testing MVP Test the installation using bellow command: mvp.pvs.fsout.sh which will generate below message: ERROR! No options were passed Usage: mvp.pvs.fsout.sh -f STUDY_FOLDER -s SUBJECT_ID -t FRANGI_THRESHOLD -o OUTPUT_DIR_NAME Default values: -t FRANGI_THRESHOLD [defualt = 0.00002] -o OUTPUT_DIR_NAME [e.g. pvs_seg, default = study_folder/subject_id/pvs] Example: sh mvp.pvs.fsout.sh -f /my_projects/aging_project -s sub-01 -t 0.00001 -o pvs This script assumes there is a folder inside sub-01 called fsout, which hosts FreeSurfer outputs (lable, mri ... folders). For example: /my_projects/aging_project/sub-01/fsout/mri folder must exists! 4. Additional pipeline dependency Automated pipeline provided in MVP uses MATLAB for different purposes, including image enhancement, posprocessing and certain feature extractions. For the ease of use, add below line to your source file (e.g. ~/.bashrc ). export PATH=/Applications/MATLAB_R2019b.app/bin/:${PATH}","title":"Installation"},{"location":"_installation/#installation","text":"","title":"Installation"},{"location":"_installation/#1-install-dependencies","text":"MVP requires FSL 5 or higher , FreeSurfer, 5.3 or higher and QIT . To check the version of above softwares on your computer, try below lines: which fsl which qit which freeview","title":"1. Install Dependencies"},{"location":"_installation/#2-install-mvp","text":"Download MVP repository and add it to your system path. The direct link is provide below. To download the MVP manually clone the repository from the MVP GitHub. git clone https://github.com/sepehrband/MVP.git sh setpath.sh or manually modify the source (e.g. ~/.bashrc ). MVPDIR=/Users/sepehrband/softwares/MVP PATH=${MVPDIR}/bin/:${PATH} export MVPDIR PATH","title":"2. Install MVP"},{"location":"_installation/#3-testing-mvp","text":"Test the installation using bellow command: mvp.pvs.fsout.sh which will generate below message: ERROR! No options were passed Usage: mvp.pvs.fsout.sh -f STUDY_FOLDER -s SUBJECT_ID -t FRANGI_THRESHOLD -o OUTPUT_DIR_NAME Default values: -t FRANGI_THRESHOLD [defualt = 0.00002] -o OUTPUT_DIR_NAME [e.g. pvs_seg, default = study_folder/subject_id/pvs] Example: sh mvp.pvs.fsout.sh -f /my_projects/aging_project -s sub-01 -t 0.00001 -o pvs This script assumes there is a folder inside sub-01 called fsout, which hosts FreeSurfer outputs (lable, mri ... folders). For example: /my_projects/aging_project/sub-01/fsout/mri folder must exists!","title":"3. Testing MVP"},{"location":"_installation/#4-additional-pipeline-dependency","text":"Automated pipeline provided in MVP uses MATLAB for different purposes, including image enhancement, posprocessing and certain feature extractions. For the ease of use, add below line to your source file (e.g. ~/.bashrc ). export PATH=/Applications/MATLAB_R2019b.app/bin/:${PATH}","title":"4. Additional pipeline dependency"},{"location":"about/","text":"About Documentation This website contains the documentation for techniques related to mapping vascular and perivascular (MVP) spaces of brain using neuroimaging data. Code Repository The GitHub respository hosting the MVP is here . The repo is only open to developers. To access the MVP repository, please contact @sepehrband and provide below information: - Name: - Email: - Organization: Contact For more information contact Farshid Sepehrband at information provided at the GitHub repository. Acknowledgement In addition to FSL, FreeSurfer and QIT, we used Matlab Nifti toolset and Dr Coup\u00e9 MRI denoising tool , which we are thankful for their amazing contribution to open science. Please cite acknowledge these tools should you used the tools presented here. Contribute Contact us if you are interested to contribute to MVP or to join our team at IMG: www.ini.usc.edu/img Citation Techniques Sepehrband, F., Barisano, G., Sheikh-Bahaei, N. et al. Image processing approaches to enhance perivascular space visibility and quantification using MRI. Sci Rep 9, 12351 (2019). https://doi.org/10.1038/s41598-019-48910-x Sepehrband, F., Cabeen, R. P., Choupan, J., Barisano, G., Law, M., Toga, A. W., & Alzheimer's Disease Neuroimaging Initiative. (2019). Perivascular space fluid contributes to diffusion tensor imaging changes in white matter. NeuroImage, 197, 243-254. https://doi.org/10.1016/j.neuroimage.2019.04.070 Scientific papers Sepehrband, F., Cabeen, R. P., Barisano, G., Sheikh-Bahaei, N., Choupan, J., Law, M., ... & Alzheimer's Disease Neuroimaging Initiative. (2019). Nonparenchymal fluid is the source of increased mean diffusivity in preclinical Alzheimer's disease. Alzheimer's & Dementia: Diagnosis, Assessment & Disease Monitoring, 11, 348-354. Sepehrband, F., Barisano, G., Sheikh-Bahaei, N., Choupan, J., Cabeen, R. P., Crawford, M. S., ... & Toga, A. W. (2020). Alteration of perivascular spaces in early cognitive decline. bioRxiv.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#documentation","text":"This website contains the documentation for techniques related to mapping vascular and perivascular (MVP) spaces of brain using neuroimaging data.","title":"Documentation"},{"location":"about/#code-repository","text":"The GitHub respository hosting the MVP is here . The repo is only open to developers. To access the MVP repository, please contact @sepehrband and provide below information: - Name: - Email: - Organization:","title":"Code Repository"},{"location":"about/#contact","text":"For more information contact Farshid Sepehrband at information provided at the GitHub repository.","title":"Contact"},{"location":"about/#acknowledgement","text":"In addition to FSL, FreeSurfer and QIT, we used Matlab Nifti toolset and Dr Coup\u00e9 MRI denoising tool , which we are thankful for their amazing contribution to open science. Please cite acknowledge these tools should you used the tools presented here.","title":"Acknowledgement"},{"location":"about/#contribute","text":"Contact us if you are interested to contribute to MVP or to join our team at IMG: www.ini.usc.edu/img","title":"Contribute"},{"location":"about/#citation","text":"","title":"Citation"},{"location":"about/#techniques","text":"Sepehrband, F., Barisano, G., Sheikh-Bahaei, N. et al. Image processing approaches to enhance perivascular space visibility and quantification using MRI. Sci Rep 9, 12351 (2019). https://doi.org/10.1038/s41598-019-48910-x Sepehrband, F., Cabeen, R. P., Choupan, J., Barisano, G., Law, M., Toga, A. W., & Alzheimer's Disease Neuroimaging Initiative. (2019). Perivascular space fluid contributes to diffusion tensor imaging changes in white matter. NeuroImage, 197, 243-254. https://doi.org/10.1016/j.neuroimage.2019.04.070","title":"Techniques"},{"location":"about/#scientific-papers","text":"Sepehrband, F., Cabeen, R. P., Barisano, G., Sheikh-Bahaei, N., Choupan, J., Law, M., ... & Alzheimer's Disease Neuroimaging Initiative. (2019). Nonparenchymal fluid is the source of increased mean diffusivity in preclinical Alzheimer's disease. Alzheimer's & Dementia: Diagnosis, Assessment & Disease Monitoring, 11, 348-354. Sepehrband, F., Barisano, G., Sheikh-Bahaei, N., Choupan, J., Cabeen, R. P., Crawford, M. S., ... & Toga, A. W. (2020). Alteration of perivascular spaces in early cognitive decline. bioRxiv.","title":"Scientific papers"},{"location":"installation/","text":"Installation 1. Install Dependencies MVP requires FSL 5 or higher , FreeSurfer, 5.3 or higher and QIT . To check the version of above softwares on your computer, try below lines: which fsl which qit which freeview 2. Install MVP To install MVP on your syste, download the MVP repository and add it to your system path. To access the MVP repository, please contact @sepehrband and provide below information: - Name: - Email: - Organization: Once you received the MVP package, save it in your desired location and run: sh setpath.sh or manually modify the source (e.g. ~/.bashrc ). MVPDIR=/Users/sepehrband/softwares/MVP PATH=${MVPDIR}/bin/:${PATH} export MVPDIR PATH 3. Testing MVP Test the installation using bellow command: mvp.pvs.fsout.sh which will generate below message: ERROR! No options were passed Usage: map.pvs.epc.sh -f STUDY_FOLDER -s SUBJECT_ID -t FRANGI_ THRESHOLD -v MAX_PVS_VOLUME -b BG_SEGMENTATION -o OUTPUT_ DIR_NAME Default values: -t FRANGI_THRESHOLD [defualt = 0.00002] -v MAX_PVS_VOLUME [default = do nothing, remove PVS large than are larger than MAX_PVS_VOLUME voxels] -b BG_SEGMENTATION [default = 1, set to 0 to skip basal ganglia PVS segmentation] -o OUTPUT_DIR_NAME [e.g. pvs_seg, default = study_ folder/subject_id/pvs] Example: sh mvp.pvs.fsout.sh -f /my_projects/aging_ project -s sub-01 -t 0.00001 -o pvs This script assumes there is a folder inside sub-01 called fsout, which hosts FreeSurfer outputs (lable, mri ... folders). For example: /my_projects/aging_project/sub-01/fsout/mri folder must exists! 4. Additional pipeline dependency Automated pipeline provided in MVP uses MATLAB for different purposes, including image enhancement, posprocessing and certain feature extractions. For the ease of use, add below line to your source file (e.g. ~/.bashrc ). export PATH=/Applications/MATLAB_R2019b.app/bin/:${PATH} Change MATLAB_R2019b with your MATLAB version.","title":"Getting Started"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#1-install-dependencies","text":"MVP requires FSL 5 or higher , FreeSurfer, 5.3 or higher and QIT . To check the version of above softwares on your computer, try below lines: which fsl which qit which freeview","title":"1. Install Dependencies"},{"location":"installation/#2-install-mvp","text":"To install MVP on your syste, download the MVP repository and add it to your system path. To access the MVP repository, please contact @sepehrband and provide below information: - Name: - Email: - Organization: Once you received the MVP package, save it in your desired location and run: sh setpath.sh or manually modify the source (e.g. ~/.bashrc ). MVPDIR=/Users/sepehrband/softwares/MVP PATH=${MVPDIR}/bin/:${PATH} export MVPDIR PATH","title":"2. Install MVP"},{"location":"installation/#3-testing-mvp","text":"Test the installation using bellow command: mvp.pvs.fsout.sh which will generate below message: ERROR! No options were passed Usage: map.pvs.epc.sh -f STUDY_FOLDER -s SUBJECT_ID -t FRANGI_ THRESHOLD -v MAX_PVS_VOLUME -b BG_SEGMENTATION -o OUTPUT_ DIR_NAME Default values: -t FRANGI_THRESHOLD [defualt = 0.00002] -v MAX_PVS_VOLUME [default = do nothing, remove PVS large than are larger than MAX_PVS_VOLUME voxels] -b BG_SEGMENTATION [default = 1, set to 0 to skip basal ganglia PVS segmentation] -o OUTPUT_DIR_NAME [e.g. pvs_seg, default = study_ folder/subject_id/pvs] Example: sh mvp.pvs.fsout.sh -f /my_projects/aging_ project -s sub-01 -t 0.00001 -o pvs This script assumes there is a folder inside sub-01 called fsout, which hosts FreeSurfer outputs (lable, mri ... folders). For example: /my_projects/aging_project/sub-01/fsout/mri folder must exists!","title":"3. Testing MVP"},{"location":"installation/#4-additional-pipeline-dependency","text":"Automated pipeline provided in MVP uses MATLAB for different purposes, including image enhancement, posprocessing and certain feature extractions. For the ease of use, add below line to your source file (e.g. ~/.bashrc ). export PATH=/Applications/MATLAB_R2019b.app/bin/:${PATH} Change MATLAB_R2019b with your MATLAB version.","title":"4. Additional pipeline dependency"},{"location":"license/","text":"License This software is Copyright \u00a9 2020 The University of Southern California. All Rights Reserved. Permission to use, copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies. Permission to make commercial use of this software may be obtained by contacting: Farshid Sepehrband farshid.sepehrband@loni.usc.edu University of Southern California 2025 Zonal Ave, Los Angeles, CA 90033, USA This software program and documentation are copyrighted by The University of Southern California. The software program and documentation are supplied \"as is\", without any accompanying services from USC. USC does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason. IN NO EVENT SHALL THE UNIVERSITY OF SOUTHERN CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF SOUTHERN CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.","title":"Licence"},{"location":"license/#license","text":"This software is Copyright \u00a9 2020 The University of Southern California. All Rights Reserved. Permission to use, copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies. Permission to make commercial use of this software may be obtained by contacting: Farshid Sepehrband farshid.sepehrband@loni.usc.edu University of Southern California 2025 Zonal Ave, Los Angeles, CA 90033, USA This software program and documentation are copyrighted by The University of Southern California. The software program and documentation are supplied \"as is\", without any accompanying services from USC. USC does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason. IN NO EVENT SHALL THE UNIVERSITY OF SOUTHERN CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF SOUTHERN CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF SOUTHERN CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.","title":"License"},{"location":"pvs/","text":"Note Note that these pipelines may not be optimized for all datasets or applications, and therefore require visual inspection and parameter optimization. Here we share pipelines that are tested on certain datasets (e.g. Human Connectome Project or ADNI cohorts). These pipelines allow users to have a simple and fast implementation of the PVS mapping. Underlying modules and image processing approaches used in these pipelines are descripted in this paper . Mapping PVS using EPC (T1 and T2) This pipeline is written for when both 3D T1 and 3D T2 MRIs are available, which provides a high sensitivity to PVS. The ideal input for this pipeline is HCP-like data (i.e. submilimeter 3D T1w and T2w). T1w and T2w should be preprocessed using HCP minimal preprocessing pipeline (users can use their own preprocessing, but should ensure that T1 and T2 are aligned and are saved using below naming conventions). The pipline reads T1w_acpc_dc_restore_brain.nii.gz , T2w_acpc_dc_restore_brain.nii.gz , wmparc.nii.gz and ribbon.nii.gz files and generates enhanced PVS contrast (EPC). It also generates PVS mask in white matter and basal ganglia and quantifies PVS volume fraction in these regions using wmparc labels. For more information about white matter regions of wmparc see this paper . To run the pipline, use: mvp.pvs.epc.sh -f path-to-study -s subject-id [-t segmentation-threshold] [-w white-matter-segmentation] [-b basal-ganglia-segmentation] [-i input-image] [-o output-folder-name] Arguments of mvp.pvs.epc.sh are: Required aruguments: -f : path to the study folder (e.g. -f /data/projects/adni) -s : subject ID (e.g. -s subj-01) Optional arguments: -t : threshold to be applied on vessel likelihhood [default = 0.00002] -w : segment PVS in white matter. set -w 0 to skip white matter [default = 1] -b : segment PVS in basal ganglia. set -b 0 to skip basal ganglia [default = 1] -i : input MRI. set 0 to use both t1 and t2, set to 1 for T1 and 2 for T2 [default = 0] -v : remove PVS larger than X voxels (e.g. -v 100) [default = do nothing] -o : name of the output directory [default = pvs] The pipeline assumes a repository format similar to HCP repositories. study-folder |___sub-01 |___T1w |___T1w_acpc_dc_restore_brain.nii.gz |___T2w_acpc_dc_restore_brain.nii.gz |___wmparc.nii.gz After running this pipeline, a $output-folder-name will be added. We suggest -o pvs for output name, which is the default value. The output folder will contain pvs mask pvs.mask.nii.gz and a directory containing PVS volume fraction across white matter pvs.stat/ . Other intermediate files are also stored in the same folder. For example, this code will generate below outputs. mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 study-folder |___sub-01 |___T1w |___T1w_acpc_dc_restore_brain.nii.gz |___T2w_acpc_dc_restore_brain.nii.gz |___wmparc.nii.gz |___pvs |___epc.nii.gz |___pvs.mask.nii.gz |___pvs.stat |___wm.csv |___wmparc.csv EPC image has a significantly higher PVS contrast in comparison with T1w and T2w, which is suitable to map small PVS and detecting PVS from background noise. If a same acquisition as HCP is used for your data, we recommend to use the defaul threshold, which we have optimized specifically for HCP data ref . The optimum is -t 0.000001 (around 1.5 when the threshold was standardized across Frangi outputs range for the tested HCP sample - for more information please see the EPC paper). If the defaul threshold did not provide the optimum results in your data, we recommend a number around the default value. Tip In order to find the optimum threshold for your dataset, run the existing pipeline with default values. Then overlay sub-01/pvs/frangi.nii.gz on EPC image sub-01/pvs/epc.nii.gz and assess different thresholds. You can then create a new PVS mask using fslmaths frangi.nii.gz -thr $new_threshold -bin new_pvs_mask.nii.gz Alternatively, you can use automated threshold identification techniques to find the optimum threshold for your data. More information about automated threshold identification will be added in the future. Mapping PVS in BG Currently, for basal ganglia PVS segmentation MVP only uses T2 MRI. This is done by default and no set up is required. If you wish to segment BG PVS using T1, set -i 1 (which is not recommended if T2 is available). Note that both WM and BG segmentation will be done using the same threshold. to use different threshold for each region, users should run the mvp.pvs.epc.sh command twice, similar to below examples: # Skip BG and use t=0.00001 for WM mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -w 1 -b 0 -t 0.00001 # Skip WM and use t=0.00005 for BG mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -w 0 -b 1 -t 0.00005 Results from both of above commands will be stored in study-folder/sub-id/pvs . Note We noted that BG PVS mapping is less stable compared to WM PVS mapping. Hence, it requires visual inspection and most likely manual correction. Mapping PVS from only T2 MRI This pipeline can be used for PVS mapping using only one of 3D T1 or 3D T2 MRI on HCP-like data. Note that when both are available the EPC approach is recommended. We added this option because there are certain situations that user may want to derive PVS from only T1 or T2. For example, when T1 and T2 could not be aligned. Or when one is distorted. To run this pipeline, we assumed the MRI has been preprocessed using HCP minimal preprocessing pipeline. The folder configuration therefore would be similar to the EPC example. To run the PVS pipeline on single data, use -i argument. Use -i 1 for T1 and -i 2 for T2. Default takes both images ( -i 0 ). Here is an example of running this pipeline only on 3D T2 MRI: mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -i 2 -o pvs_t2 Optimum thresholds for this task are t=0.02 and t=0.01 for T1 and T2, respectively. These thresholds are set as the default value. Similar to above examples, assess the quality of the PVS segmenation and ensure the threshold is optimum for your dataset. Mapping PVS from typical T1 MRI Here by \"typical T1 MRI\" we are referring to conventional 1mm 3 T1-weighted MRI, which is often used in clinical studies such as ADNI. Such data is not optimal for PVS mapping due to the low resolution and lack of accompanying 3D T2-weighted MRI. However, these images can still be used to high caliber PVS. MVP uses the output of FreeSurfer recon-all as the input to the PVS mapping pipeline. The pipline reads T1.mgz and wmparc.mgz files and generate PVS mask and quantifies PVS volume fraction globally and across white matter regions, defined by wmparc . For more information about white matter regions of wmparc see this paper . To run the pipline, use: mvp.pvs.fsout.sh -f path-to-study -s subject-id [-t segmentation-threshold] [-b basal-ganglia-segmentation] [-o output-folder-name] Arguments of mvp.pvs.fsout.sh are: Required aruguments: -f : path to the study folder (e.g. -f /data/projects/adni) -s : subject ID (e.g. -s subj-01) Optional arguments: -t : threshold to be applied on vessel likelihhood [default = 0.00002] -b : also segment PVS in basal ganglia. set -b 0 to skip basal ganglia [default = 1] -v : remove PVS larger than X voxels (e.g. -v 100) [default = do nothing] -o : name of the output directory [default = pvs] The pipeline assumes a repository format similar to BIDS. And expect to have a folder called fsout containing output of FreeSurfer recon-all . study-folder |___sub-01 |___anat |___fsout After running this pipeline, a $output-folder-name will be added. We suggest -o pvs for output name, which is the default value. The output folder will contain pvs masks ( pvs.mask.nii.gz and pvs.bg.final.nii.gz ), and a directory containing PVS volume fraction across white matter and basal ganglia ( pvs.stat/ ). Other intermediate files are also stored in the same folder. An example is included in the repository which can be tested by running below command: mvp.pvs.fsout.sh -f ${MVPDIR}/example/fs_example -s sub-01 The output of above command is: study-folder |___sub-01 |___anat |___fsout |___pvs |___pvs.mask.nii.gz |___pvs.stat |___wm.csv |___wmparc.csv This example uses the default threshold value of -t 0.00002 and output folder name of pvs . Optimum threshold depends on input image quality and resolution. Above threshold showed to generate semi-optimum result on clinical 3D T1 MRI, such as those acquired in ADNI dataset [ref] . Similar to EPC example , in order to find the optimum threshold for your dataset, run the existing pipeline with default values. Then overlay sub-01/pvs/frangi.nii.gz on sub-01/pvs/t1w.nii.gz image and assess different thresholds. Note Basal ganglia PVS mapping uses the fixed threshold of 0.0015. Currently no arugment for assigning this number is availble. To use other thresholds, first overlay sub-01/pvs/frangi.bg.nii.gz on sub-01/pvs/t1w.nii.gz and then apply new threshold using fslmaths frangi.bg.nii.gz -thr $new_threshold -bin new_pvs_bg.nii.gz","title":"PVS Mapping Pipelines"},{"location":"pvs/#mapping-pvs-using-epc-t1-and-t2","text":"This pipeline is written for when both 3D T1 and 3D T2 MRIs are available, which provides a high sensitivity to PVS. The ideal input for this pipeline is HCP-like data (i.e. submilimeter 3D T1w and T2w). T1w and T2w should be preprocessed using HCP minimal preprocessing pipeline (users can use their own preprocessing, but should ensure that T1 and T2 are aligned and are saved using below naming conventions). The pipline reads T1w_acpc_dc_restore_brain.nii.gz , T2w_acpc_dc_restore_brain.nii.gz , wmparc.nii.gz and ribbon.nii.gz files and generates enhanced PVS contrast (EPC). It also generates PVS mask in white matter and basal ganglia and quantifies PVS volume fraction in these regions using wmparc labels. For more information about white matter regions of wmparc see this paper . To run the pipline, use: mvp.pvs.epc.sh -f path-to-study -s subject-id [-t segmentation-threshold] [-w white-matter-segmentation] [-b basal-ganglia-segmentation] [-i input-image] [-o output-folder-name] Arguments of mvp.pvs.epc.sh are: Required aruguments: -f : path to the study folder (e.g. -f /data/projects/adni) -s : subject ID (e.g. -s subj-01) Optional arguments: -t : threshold to be applied on vessel likelihhood [default = 0.00002] -w : segment PVS in white matter. set -w 0 to skip white matter [default = 1] -b : segment PVS in basal ganglia. set -b 0 to skip basal ganglia [default = 1] -i : input MRI. set 0 to use both t1 and t2, set to 1 for T1 and 2 for T2 [default = 0] -v : remove PVS larger than X voxels (e.g. -v 100) [default = do nothing] -o : name of the output directory [default = pvs] The pipeline assumes a repository format similar to HCP repositories. study-folder |___sub-01 |___T1w |___T1w_acpc_dc_restore_brain.nii.gz |___T2w_acpc_dc_restore_brain.nii.gz |___wmparc.nii.gz After running this pipeline, a $output-folder-name will be added. We suggest -o pvs for output name, which is the default value. The output folder will contain pvs mask pvs.mask.nii.gz and a directory containing PVS volume fraction across white matter pvs.stat/ . Other intermediate files are also stored in the same folder. For example, this code will generate below outputs. mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 study-folder |___sub-01 |___T1w |___T1w_acpc_dc_restore_brain.nii.gz |___T2w_acpc_dc_restore_brain.nii.gz |___wmparc.nii.gz |___pvs |___epc.nii.gz |___pvs.mask.nii.gz |___pvs.stat |___wm.csv |___wmparc.csv EPC image has a significantly higher PVS contrast in comparison with T1w and T2w, which is suitable to map small PVS and detecting PVS from background noise. If a same acquisition as HCP is used for your data, we recommend to use the defaul threshold, which we have optimized specifically for HCP data ref . The optimum is -t 0.000001 (around 1.5 when the threshold was standardized across Frangi outputs range for the tested HCP sample - for more information please see the EPC paper). If the defaul threshold did not provide the optimum results in your data, we recommend a number around the default value. Tip In order to find the optimum threshold for your dataset, run the existing pipeline with default values. Then overlay sub-01/pvs/frangi.nii.gz on EPC image sub-01/pvs/epc.nii.gz and assess different thresholds. You can then create a new PVS mask using fslmaths frangi.nii.gz -thr $new_threshold -bin new_pvs_mask.nii.gz Alternatively, you can use automated threshold identification techniques to find the optimum threshold for your data. More information about automated threshold identification will be added in the future.","title":"Mapping PVS using EPC (T1 and T2)"},{"location":"pvs/#mapping-pvs-in-bg","text":"Currently, for basal ganglia PVS segmentation MVP only uses T2 MRI. This is done by default and no set up is required. If you wish to segment BG PVS using T1, set -i 1 (which is not recommended if T2 is available). Note that both WM and BG segmentation will be done using the same threshold. to use different threshold for each region, users should run the mvp.pvs.epc.sh command twice, similar to below examples: # Skip BG and use t=0.00001 for WM mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -w 1 -b 0 -t 0.00001 # Skip WM and use t=0.00005 for BG mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -w 0 -b 1 -t 0.00005 Results from both of above commands will be stored in study-folder/sub-id/pvs . Note We noted that BG PVS mapping is less stable compared to WM PVS mapping. Hence, it requires visual inspection and most likely manual correction.","title":"Mapping PVS in BG"},{"location":"pvs/#mapping-pvs-from-only-t2-mri","text":"This pipeline can be used for PVS mapping using only one of 3D T1 or 3D T2 MRI on HCP-like data. Note that when both are available the EPC approach is recommended. We added this option because there are certain situations that user may want to derive PVS from only T1 or T2. For example, when T1 and T2 could not be aligned. Or when one is distorted. To run this pipeline, we assumed the MRI has been preprocessed using HCP minimal preprocessing pipeline. The folder configuration therefore would be similar to the EPC example. To run the PVS pipeline on single data, use -i argument. Use -i 1 for T1 and -i 2 for T2. Default takes both images ( -i 0 ). Here is an example of running this pipeline only on 3D T2 MRI: mvp.pvs.epc.sh -f ${MVPDIR}/example/hcp-like_example -s sub-01 -i 2 -o pvs_t2 Optimum thresholds for this task are t=0.02 and t=0.01 for T1 and T2, respectively. These thresholds are set as the default value. Similar to above examples, assess the quality of the PVS segmenation and ensure the threshold is optimum for your dataset.","title":"Mapping PVS from only T2 MRI"},{"location":"pvs/#mapping-pvs-from-typical-t1-mri","text":"Here by \"typical T1 MRI\" we are referring to conventional 1mm 3 T1-weighted MRI, which is often used in clinical studies such as ADNI. Such data is not optimal for PVS mapping due to the low resolution and lack of accompanying 3D T2-weighted MRI. However, these images can still be used to high caliber PVS. MVP uses the output of FreeSurfer recon-all as the input to the PVS mapping pipeline. The pipline reads T1.mgz and wmparc.mgz files and generate PVS mask and quantifies PVS volume fraction globally and across white matter regions, defined by wmparc . For more information about white matter regions of wmparc see this paper . To run the pipline, use: mvp.pvs.fsout.sh -f path-to-study -s subject-id [-t segmentation-threshold] [-b basal-ganglia-segmentation] [-o output-folder-name] Arguments of mvp.pvs.fsout.sh are: Required aruguments: -f : path to the study folder (e.g. -f /data/projects/adni) -s : subject ID (e.g. -s subj-01) Optional arguments: -t : threshold to be applied on vessel likelihhood [default = 0.00002] -b : also segment PVS in basal ganglia. set -b 0 to skip basal ganglia [default = 1] -v : remove PVS larger than X voxels (e.g. -v 100) [default = do nothing] -o : name of the output directory [default = pvs] The pipeline assumes a repository format similar to BIDS. And expect to have a folder called fsout containing output of FreeSurfer recon-all . study-folder |___sub-01 |___anat |___fsout After running this pipeline, a $output-folder-name will be added. We suggest -o pvs for output name, which is the default value. The output folder will contain pvs masks ( pvs.mask.nii.gz and pvs.bg.final.nii.gz ), and a directory containing PVS volume fraction across white matter and basal ganglia ( pvs.stat/ ). Other intermediate files are also stored in the same folder. An example is included in the repository which can be tested by running below command: mvp.pvs.fsout.sh -f ${MVPDIR}/example/fs_example -s sub-01 The output of above command is: study-folder |___sub-01 |___anat |___fsout |___pvs |___pvs.mask.nii.gz |___pvs.stat |___wm.csv |___wmparc.csv This example uses the default threshold value of -t 0.00002 and output folder name of pvs . Optimum threshold depends on input image quality and resolution. Above threshold showed to generate semi-optimum result on clinical 3D T1 MRI, such as those acquired in ADNI dataset [ref] . Similar to EPC example , in order to find the optimum threshold for your dataset, run the existing pipeline with default values. Then overlay sub-01/pvs/frangi.nii.gz on sub-01/pvs/t1w.nii.gz image and assess different thresholds. Note Basal ganglia PVS mapping uses the fixed threshold of 0.0015. Currently no arugment for assigning this number is availble. To use other thresholds, first overlay sub-01/pvs/frangi.bg.nii.gz on sub-01/pvs/t1w.nii.gz and then apply new threshold using fslmaths frangi.bg.nii.gz -thr $new_threshold -bin new_pvs_bg.nii.gz","title":"Mapping PVS from typical T1 MRI"},{"location":"pvs_qc/","text":"PVS Quality Control and Manual Correction To be added !","title":"PVS Quality Control and Correction"},{"location":"pvs_qc/#pvs-quality-control-and-manual-correction","text":"","title":"PVS Quality Control and Manual Correction"},{"location":"pvs_qc/#to-be-added","text":"","title":"To be added !"},{"location":"temp/","text":"Mapping PVS, excluding WMH Extra PVS Mapping modules Quality Control PVS results Morphometric-based PVS correction WMH-based PVS correction Extracting regional PVS after correction Quantifying morphological features of PVS Mapping White Matter Hyperintensities (WMH) Mapping Brain Vessels and their features Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Temp"},{"location":"temp/#mapping-pvs-excluding-wmh","text":"","title":"Mapping PVS, excluding WMH"},{"location":"temp/#extra-pvs-mapping-modules","text":"","title":"Extra PVS Mapping modules"},{"location":"temp/#quality-control-pvs-results","text":"","title":"Quality Control PVS results"},{"location":"temp/#morphometric-based-pvs-correction","text":"","title":"Morphometric-based PVS correction"},{"location":"temp/#wmh-based-pvs-correction","text":"","title":"WMH-based PVS correction"},{"location":"temp/#extracting-regional-pvs-after-correction","text":"","title":"Extracting regional PVS after correction"},{"location":"temp/#quantifying-morphological-features-of-pvs","text":"","title":"Quantifying morphological features of PVS"},{"location":"temp/#mapping-white-matter-hyperintensities-wmh","text":"","title":"Mapping White Matter Hyperintensities (WMH)"},{"location":"temp/#mapping-brain-vessels-and-their-features","text":"","title":"Mapping Brain Vessels and their features"},{"location":"temp/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"temp/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}